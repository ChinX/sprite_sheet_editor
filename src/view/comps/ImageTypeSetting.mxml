<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<s:RadioButtonGroup id="formatRBG" valueCommit="handler_formatRBGvalueCommit(event)"/>
	</fx:Declarations>
	<s:RadioButton id="pngRB" groupName="formatRBG" selected="true">
		<s:label>{FxGettext.gettext("PNG image")}</s:label>
	</s:RadioButton>
	<s:RadioButton id="jpgRB" groupName="formatRBG">
		<s:label>{FxGettext.gettext("JPEG image")}</s:label>
	</s:RadioButton>
	<s:RadioButton id="jpgxrRB" groupName="formatRBG">
		<s:label>{FxGettext.gettext("JPEG-XR image")}</s:label>
	</s:RadioButton>
	<s:HGroup verticalAlign="middle" visible="{jpgRB.selected||jpgxrRB.selected}">
		<s:Label>
			<s:text>{FxGettext.gettext("Compress:")}</s:text>
		</s:Label>
		<s:NumericStepper id="qualityNS" minimum="1" maximum="100" value="70" maxChars="3" width="100%">
			<s:toolTip>{FxGettext.gettext("For JPEG, bigger is better;For JPEG-XR, smaller is better.")}</s:toolTip>
		</s:NumericStepper>
	</s:HGroup>
	<fx:Metadata>
		[Event(name="change", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.zengrong.display.spritesheet.SpriteSheetType;
			
			import type.ExtendedNameType;
			
			override protected function createChildren():void
			{
				super.createChildren();
				pngRB.value = ExtendedNameType.PNG;
				jpgRB.value = ExtendedNameType.JPEG;
				jpgxrRB.value = ExtendedNameType.JPEG_XR;
			}
			
			public function get qualityValue():int
			{
				return qualityNS.value;
			}
			
			public function get spriteSheetType():String
			{
				switch(imageType)
				{
					case ExtendedNameType.PNG:
						return SpriteSheetType.PNG_IMAGE;
						break;
					case ExtendedNameType.JPEG:
						return SpriteSheetType.JPG_IMAGE;
						break;
					case ExtendedNameType.JPEG_XR:
						return SpriteSheetType.JPG_XR_IMAGE;
						break;
				}
				throw new TypeError("不支持扩展名为【"+imageType+"】的文件！");
			}
			
			public function get imageType():String
			{
				return formatRBG.selectedValue as String;
			}
			
			public function set imageType($type:String):void
			{
				formatRBG.selectedValue = $type;
			}
			
			protected function handler_formatRBGvalueCommit($evt:FlexEvent):void
			{
				this.dispatchEvent(new Event(Event.CHANGE));
			}
		]]>
	</fx:Script>
</s:VGroup>