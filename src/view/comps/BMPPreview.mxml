<?xml version="1.0" encoding="utf-8"?>
<!-- zengrong.net -->
<!-- 创建者:zrong(zrongzrong@gmail.com) -->
<!-- 创建时间：2011-8-5 -->
<!-- 显示BitmapData格式的预览 -->
<comps:Preview xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:comps="view.comps.*" >
	<fx:Declarations>
		<s:BitmapImage id="viewer" clearOnLoad="true" scaleMode="letterbox" horizontalAlign="left" verticalAlign="top"
					   ready="handler_loadComplete(event)"/>
		<s:SpriteVisualElement id="pieceRangeCanva"/>
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="previewClick", type="events.SSEvent")]
	</fx:Metadata>
	<fx:Script>
	<![CDATA[
		import events.SSEvent;
		
		import utils.Global;
		
		override protected function init():void
		{
			super.init();
			scrollerView.addElement(viewer);
			scrollerView.addElement(pieceRangeCanva);
			scrollerView.addElement(transf);
			scrollerView.addEventListener(MouseEvent.CLICK, handler_viewClick);
		}
		
		//----------------------------------------
		// getter/setter
		//----------------------------------------
		override public function set source($so:*):void
		{
//			if(!$so && viewer.bitmapData)
//				viewer.bitmapData.dispose();
			viewer.source = $so;
		}
		
		override public function get content():IBitmapDrawable
		{
			return viewer.bitmapData;
		}
		
		override protected function get bg():*
		{
			return chessboard;
		}
		//----------------------------------------
		// public
		//----------------------------------------
		public function clearCanva():void
		{
			pieceRangeCanva.graphics.clear();
		}
		
		public function drawRect($x:int, $y:int, $w:int, $h:int):void
		{
			pieceRangeCanva.graphics.beginFill(0xFF0000, .5);
			pieceRangeCanva.graphics.lineStyle(1, 0xFF0000);
			pieceRangeCanva.graphics.drawRect($x, $y,$w,$h);
			pieceRangeCanva.graphics.endFill();
		}
		
		override public function destroy():void
		{
			source = null;
			sourceWidth = 0;
			sourceHeight = 0;
			viewerWidth = 0;
			viewerHeight = 0;
			sourceInfo = '';
		}
		
		override protected function handler_loadComplete($event:Event):void
		{
			//trace('BMPPreview:', viewer.width, viewer.height);
			sourceWidth = viewer.sourceWidth;
			sourceHeight = viewer.sourceHeight;
			if(scaleContent)
			{
				viewer.width = viewScroller.viewport.width;
				viewer.height = viewScroller.viewport.height;
				viewerWidth = viewScroller.viewport.width;
				viewerHeight = viewScroller.viewport.height;
			}
			else
			{
				viewer.width = sourceWidth;
				viewer.height = sourceHeight;
				viewerWidth = sourceWidth;
				viewerHeight = sourceHeight;
			}
			sourceInfo = 'W:'+sourceWidth+',H:'+sourceHeight;
			this.dispatchEvent(new SSEvent(SSEvent.PREVIEW_LOAD_COMPLETE));
			//trace('BMPPreview:', viewerWidth, viewerHeight, sourceWidth, sourceHeight);
		}
		
		private function handler_viewClick($evt:MouseEvent):void
		{
			dispatchEvent(new SSEvent(SSEvent.PREVIEW_CLICK, new Point(scrollerView.mouseX, scrollerView.mouseY)));
		}
	]]>
	</fx:Script>
</comps:Preview>
