<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:comps="view.comps.*"
		  xmlns:mx="library://ns.adobe.com/flex/mx">
	<s:BorderContainer width="320" height="100%" borderColor="0x878787" backgroundAlpha="0">
		<s:layout>
			<s:VerticalLayout horizontalAlign="center" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
		</s:layout>
		<s:BorderContainer width="100%" backgroundColor="0x696969">
			<s:layout>
				<s:VerticalLayout horizontalAlign="center" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
			</s:layout>
			<s:Label>
				<s:text>{FxGettext.gettext("frame(x,y,w,h)")}</s:text>
			</s:Label>
			<comps:TransformToolControlBar id="transControlBar">
				<comps:label>{FxGettext.gettext("Custom size of the frame")}</comps:label>
				<comps:useCustom>false</comps:useCustom>
				<comps:layout>
					<s:VerticalLayout horizontalAlign="center" />
				</comps:layout>
			</comps:TransformToolControlBar>
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Label>
					<s:text>{FxGettext.gettext("1st frame(zero-based):")}</s:text>
				</s:Label>
				<s:Spacer width="100%"/>
				<s:NumericStepper id="firstFrameNS" maximum="1000" minimum="0" stepSize="1" width="100"/>
			</s:HGroup>
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Label>
					<s:text>{FxGettext.gettext("Total frames:")}</s:text>
				</s:Label>
				<s:Spacer width="100%"/>
				<s:NumericStepper id="totalFrameNS" maximum="10000" minimum="1" value="10" stepSize="1" width="100"/>
			</s:HGroup>
		</s:BorderContainer>
		<comps:BuildSetting id="buildSetting" width="100%" backgroundColor="0x696969"
						  enabled="{state&amp;&amp;state==StateType.LOAD_DONE}" />
	</s:BorderContainer>
	<comps:ImagePreview id="swf" width="100%" height="100%" borderColor="0x878787" backgroundAlpha="0" >
		<comps:transformControlBar>{transControlBar}</comps:transformControlBar>
		<comps:maxSizeLimit>source</comps:maxSizeLimit>
	</comps:ImagePreview>
	<fx:Metadata>
		[Event(name="complete", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
	<![CDATA[
		import air.update.descriptors.ApplicationDescriptor;
		import events.SSEvent;
		import flash.events.Event;
		import flash.geom.Rectangle;
		import gnu.as3.gettext.FxGettext;
		
		import type.StateType;
		
		import utils.Funs;
		
		//保存选择的swf文件的路径
		private var _frameNum:int;					//当前正在播放的帧的索引
		private var _whRect:Rectangle;				//保存Sheet的宽高
		private var _rectInSheet:Rectangle;		//保存当前帧在Sheet中的位置和大小
		private var _limitW:Boolean;
		private var _frameRect:Rectangle;			//当前当前帧的位置
		[Bindable] public var state:String;		//当前的处理状态
		
		//----------------------------------------
		// getter/setter
		//----------------------------------------
		
		public function getFrameRect():Rectangle
		{
			var __rect:Rectangle = transControlBar.transformRect;
			if(!transControlBar.useCustom)
			{
				__rect.width = swf.sourceWidth;
				__rect.height = swf.sourceHeight;
			}
			return __rect;
		}
		
		//----------------------------------
		//  界面相关方法
		//----------------------------------
		
		public function showSWF($url:String):void
		{
			swf.source = $url;
		}
		
		public function build($url:String):void
		{
			//要生成必须重新载入swf，因为并不知晓swf当前播放到那一帧了
			swf.destroy();
			swf.source = $url;
		}
		
		public function destroy():void
		{
			swf.source = null;
		}
		
		//----------------------------------
		//  绘制相关方法
		//----------------------------------
		
		public function capture():void
		{
			trace('swf capture');
			this.addEventListener(Event.EXIT_FRAME, drawFrame);
			//帧索引永远从0开始，无论正在播放的主时间轴有几帧（可能只有1帧，使用MC做动画），也可以实现多帧捕获
			_frameNum = 0;
			_whRect = null;
			_rectInSheet = null;
			_frameRect = null;
			_limitW = buildSetting.whDDL.selectedIndex == 0;
			drawFrame();
		}
		
		private function captureDone():void
		{
			this.removeEventListener(Event.EXIT_FRAME, drawFrame);
			var __bmd:BitmapData = new BitmapData(_whRect.width, _whRect.height, buildSetting.transparentCB.selected, buildSetting.bgColorPicker.selectedColor)
			this.dispatchEvent(new SSEvent(SSEvent.CAPTURE_DONE, __bmd));
		}
		
		/**
		 * 绘制一帧，并判断所有帧绘制是否完成
		 */
		private function drawFrame(evt:Event=null):void
		{
			if (_frameNum++ >= firstFrameNS.value)
			{
				trace('drawing frame:', _frameNum-1)
				//如果没有设置_rectInSheet，应该是截取第一帧，这种情况下初始化rectInSheet、frameRect和whRect
				if(!_rectInSheet)
				{
					_frameRect = getFrameRect();
					_rectInSheet = _frameRect.clone();
					var __w:int=0;
					var __h:int=0;
					if(_limitW)
					{
						__w = buildSetting.whNS.value;
						__h = _frameRect.height;
					}
					else
					{
						__h = buildSetting.whNS.value;
						__w = _frameRect.width;
					}
					_whRect = new Rectangle(0,0,__w, __h);
				}
				else
				{
					//不是第一帧，直接更新rect
					Funs.updateRectInSheet(_rectInSheet, _whRect, _frameRect, _limitW);
				}
				var __bmd:BitmapData =  drawBMD(_frameRect);
				//向Sheet中添加这个位图
				this.dispatchEvent(new SSEvent(SSEvent.ADD_FRAME, {bmd:__bmd, rect:_rectInSheet.clone()}));
			}
			//所有帧捕获完毕后取消侦听
			if (_frameNum - firstFrameNS.value >= totalFrameNS.value)
			{
				captureDone();
			}
		}
		
		/**
		 * 绘制当前帧，返回位图
		 */
		private function drawBMD($frameRect:Rectangle):BitmapData
		{
			var __bmd:BitmapData = new BitmapData($frameRect.width, $frameRect.height, buildSetting.transparentCB.selected, buildSetting.bgColorPicker.selectedColor);
			var __ma:Matrix = null;
			if(transControlBar.useCustom)
			{
				//需要向“左上角”移动，将当前帧绘制成位图
				__ma = new Matrix();
				__ma.translate(-1*$frameRect.x, -1*$frameRect.y);
			}
			__bmd.draw(swf.content, __ma, null, null, null, buildSetting.smoothCB.selected);
			return __bmd;
		}
	]]>
	</fx:Script>
</s:HGroup>
